<Window x:Class="MeasurePlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:measurePlayer="clr-namespace:MeasurePlayer"
        xmlns:media="https://github.com/JohanLarsson/Gu.Wpf.Media"
        Title="MainWindow"
        Width="525"
        Height="350"
        d:DataContext="{d:DesignInstance measurePlayer:MainViewModel}"
        AllowDrop="True"
        Background="Black"
        TextElement.Foreground="White"
        Drop="OnDrop"
        mc:Ignorable="d">
    <Window.InputBindings>
        <KeyBinding Key="Enter"
                    Command="media:Commands.ToggleFullScreen"
                    Modifiers="Control" />
        <KeyBinding Key="F11" Command="media:Commands.ToggleFullScreen" />
        <KeyBinding Key="Escape" Command="media:Commands.EndFullScreen" />
        <KeyBinding Key="Space"
                    Command="TogglePlayPause"
                    CommandTarget="{Binding ElementName=MediaElement}" />

        <KeyBinding Key="Left"
                    Command="media:Commands.SkipBack"
                    CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding Command="media:Commands.SkipBack" CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Down" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Left"
                    Command="media:Commands.SkipBack"
                    CommandParameter="10"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control" />
        <MouseBinding Command="media:Commands.SkipBack"
                      CommandParameter="10"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Down" Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding Command="media:Commands.SkipForward" CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="10"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="10"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="100"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Shift" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="100"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Shift" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="1000"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control+Shift" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="1000"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Control+Shift" />
            </MouseBinding.Gesture>
        </MouseBinding>
        
        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="100"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Shift" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="100"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Shift" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="1000"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control+Shift" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="1000"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Control+Shift" />
            </MouseBinding.Gesture>
        </MouseBinding>
    </Window.InputBindings>

    <Window.CommandBindings>
        <CommandBinding Command="media:Commands.ToggleFullScreen" Executed="OnToggleFullScreenExecuted" />
        <CommandBinding CanExecute="OnEndFullScreenCanExecute"
                        Command="media:Commands.EndFullScreen"
                        Executed="OnEndFullScreenExecuted" />
        <CommandBinding Command="Help" Executed="OnHelpExecuted" />
        <CommandBinding Command="Open" Executed="OnOpenExecuted" />
    </Window.CommandBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <media:MediaElementWrapper x:Name="MediaElement"
                                   Grid.RowSpan="2"
                                   LoadedBehavior="Pause"
                                   MediaFailed="OnMediaFailed"
                                   Position="{Binding Position, Mode=TwoWay}"
                                   ScrubbingEnabled="True"
                                   Source="{Binding Source,
                                                    Mode=OneWay}"
                                   Stretch="{Binding IsFullScreen,
                                                     Converter={x:Static measurePlayer:BoolToStretchConverter.Default}}">
            <media:MediaElementWrapper.InputBindings>
                <MouseBinding Command="{Binding AddBookmarkCommand}" MouseAction="LeftDoubleClick" />
            </media:MediaElementWrapper.InputBindings>
        </media:MediaElementWrapper>

        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DataGrid x:Name="Bookmarks"
                      measurePlayer:Selected.Items="{Binding BookMarks.SelectedBookmarks}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      ItemsSource="{Binding BookMarks.Bookmarks}"
                      RowHeaderStyle="{x:Null}">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                    <DataGridTextColumn Binding="{Binding Time}" Header="Time" />
                </DataGrid.Columns>
            </DataGrid>
            <TextBox Grid.Row="1"
                     IsReadOnly="True"
                     Text="{Binding BookMarks.Diff,
                                    StringFormat='Diff: {0}',
                                    Mode=OneWay,
                                    UpdateSourceTrigger=PropertyChanged}" />
        </Grid>


        <Grid Grid.Row="1"
              Grid.Column="0"
              Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid VerticalAlignment="Bottom" Background="#19000000">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Slider x:Name="ProgressSlider"
                        Grid.Row="0"
                        media:Drag.PauseWhileDragging="{Binding ElementName=MediaElement}"
                        Maximum="{Binding ElementName=MediaElement,
                                          Path=Length,
                                          Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}"
                        Minimum="0"
                        Style="{StaticResource {x:Static media:Styles.ProgressSliderStyleKey}}"
                        Value="{Binding ElementName=MediaElement,
                                        Path=Position,
                                        Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}" />

                <Grid Grid.Row="1">
                    <Grid.Resources>
                        <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type Button}" />
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ToggleButton x:Name="PlayPauseButton"
                                  Grid.Column="0"
                                  IsChecked="{Binding ElementName=MediaElement,
                                                      Path=IsPlaying}"
                                  IsEnabled="{Binding ElementName=MediaElement,
                                                      Path=HasMedia}">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type ToggleButton}">
                                <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PauseGeometryKey}}" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PlayGeometryKey}}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <ToggleButton x:Name="ToggleMutedButton"
                                  Grid.Column="1"
                                  IsChecked="{Binding ElementName=MediaElement,
                                                      Path=IsMuted}"
                                  IsEnabled="{Binding ElementName=MediaElement,
                                                      Path=HasMedia}">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type ToggleButton}">
                                <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.UnMuteGeometryKey}}" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.MuteGeometryKey}}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <TextBlock x:Name="ProgressTextBlock"
                               Grid.Column="2"
                               VerticalAlignment="Center"
                               Foreground="{Binding ElementName=ToggleMutedButton,
                                                    Path=Foreground}"
                               Opacity="{Binding ElementName=ToggleMutedButton,
                                                 Path=Opacity}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} / {1}">
                                <Binding Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                         ElementName="MediaElement"
                                         Path="Position" />
                                <Binding Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                         ElementName="MediaElement"
                                         Path="Length" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <Button Grid.Column="4"
                            media:Icon.Geometry="{StaticResource {x:Static media:Geometries.FolderOpenGeometryKey}}"
                            Command="ApplicationCommands.Open" />

                    <Button Grid.Column="5"
                            HorizontalAlignment="Right"
                            media:Icon.Geometry="{StaticResource {x:Static media:Geometries.FullScreenGeometryKey}}"
                            Command="media:Commands.ToggleFullScreen"
                            IsEnabled="{Binding ElementName=MediaElement,
                                                Path=HasMedia}"
                            Padding="12,6,6,6" />
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
