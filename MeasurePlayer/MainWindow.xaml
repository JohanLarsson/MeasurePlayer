<Window x:Class="MeasurePlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:MeasurePlayer"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:media="https://github.com/JohanLarsson/Gu.Wpf.Media"
        Title="MainWindow"
        MinWidth="525"
        MinHeight="350"
        d:DataContext="{d:DesignInstance local:MainViewModel}"
        AllowDrop="True"
        Background="Black"
        Drop="OnDrop"
        SizeToContent="WidthAndHeight"
        mc:Ignorable="d">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{StaticResource {x:Static media:Brushes.EnabledForegroundBrushKey}}" />
            <Setter Property="TextElement.Foreground" Value="{StaticResource {x:Static media:Brushes.EnabledForegroundBrushKey}}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=MediaElement, Path=HasMedia}" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource {x:Static media:Brushes.DisabledForegroundBrushKey}}" />
                    <Setter Property="TextElement.Foreground" Value="{StaticResource {x:Static media:Brushes.DisabledForegroundBrushKey}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <Window.InputBindings>
        <KeyBinding Key="Enter"
                    Command="media:Commands.ToggleFullScreen"
                    Modifiers="Control" />
        <KeyBinding Key="F11" Command="media:Commands.ToggleFullScreen" />
        <KeyBinding Key="Escape" Command="media:Commands.EndFullScreen" />
        <KeyBinding Key="Space"
                    Command="TogglePlayPause"
                    CommandTarget="{Binding ElementName=MediaElement}" />

        <KeyBinding Key="Left"
                    Command="media:Commands.SkipBack"
                    CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding Command="media:Commands.SkipBack" CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Down" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Left"
                    Command="media:Commands.SkipBack"
                    CommandParameter="10"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control" />
        <MouseBinding Command="media:Commands.SkipBack"
                      CommandParameter="10"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Down" Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandTarget="{Binding ElementName=MediaElement}" />
        <MouseBinding Command="media:Commands.SkipForward" CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="10"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="10"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Control" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="100"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Shift" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="100"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Shift" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="1000"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control+Shift" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="1000"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Control+Shift" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="100"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Shift" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="100"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Shift" />
            </MouseBinding.Gesture>
        </MouseBinding>

        <KeyBinding Key="Right"
                    Command="media:Commands.SkipForward"
                    CommandParameter="1000"
                    CommandTarget="{Binding ElementName=MediaElement}"
                    Modifiers="Control+Shift" />
        <MouseBinding Command="media:Commands.SkipForward"
                      CommandParameter="1000"
                      CommandTarget="{Binding ElementName=MediaElement}">
            <MouseBinding.Gesture>
                <media:MouseWheelGesture Direction="Up" Modifiers="Control+Shift" />
            </MouseBinding.Gesture>
        </MouseBinding>
    </Window.InputBindings>

    <Window.CommandBindings>
        <CommandBinding Command="media:Commands.ToggleFullScreen" Executed="OnToggleFullScreenExecuted" />
        <CommandBinding CanExecute="OnEndFullScreenCanExecute"
                        Command="media:Commands.EndFullScreen"
                        Executed="OnEndFullScreenExecuted" />
        <CommandBinding Command="Help" Executed="OnHelpExecuted" />
        <CommandBinding Command="Open" Executed="OnOpenExecuted" />
    </Window.CommandBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <media:MediaElementWrapper x:Name="MediaElement"
                                   Grid.RowSpan="2"
                                   LoadedBehavior="Pause"
                                   MediaFailed="OnMediaFailed"
                                   Position="{Binding Position,
                                                      Mode=TwoWay}"
                                   ScrubbingEnabled="True"
                                   SkipIncrement="{Binding Info.FrameDuration,
                                                           FallbackValue={x:Static local:VideoInfo.DefaultDuration}}"
                                   Source="{Binding Source,
                                                    Mode=OneWay}"
                                   Stretch="{Binding IsFullScreen,
                                                     Converter={x:Static local:BoolToStretchConverter.Default}}">
            <media:MediaElementWrapper.InputBindings>
                <MouseBinding Command="{Binding AddBookmarkCommand}" MouseAction="LeftDoubleClick" />
            </media:MediaElementWrapper.InputBindings>
        </media:MediaElementWrapper>

        <Grid Grid.Row="0"
              HorizontalAlignment="Right"
              IsEnabled="{Binding ElementName=MediaElement,
                                  Path=HasMedia}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <DataGrid x:Name="Bookmarks"
                      local:Selected.Items="{Binding SelectedBookmarks}"
                      SelectedItem="{Binding SelectedBookmark}"
                      AutoGenerateColumns="False"
                      Background="Transparent"
                      BorderBrush="{x:Null}"
                      BorderThickness="0"
                      CanUserAddRows="False"
                      Foreground="{Binding ElementName=ToggleMutedButton,
                                           Path=Foreground}"
                      GridLinesVisibility="Horizontal"
                      HeadersVisibility="Column"
                      HorizontalGridLinesBrush="{Binding ElementName=ToggleMutedButton,
                                                         Path=Foreground}"
                      ItemsSource="{Binding BookMarks.Bookmarks,
                                            Mode=OneTime}"
                      RowBackground="Transparent"
                      SelectionMode="Extended"
                      SelectionUnit="FullRow">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Padding" Value="3,0" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="NameColumn"
                                        Width="SizeToCells"
                                        MinWidth="40"
                                        Binding="{Binding Name}"
                                        Header="Name" />
                    <DataGridTextColumn Binding="{Binding Time, Converter={x:Static media:TimeSpanToStringConverter.Default}, ConverterParameter=fff}" Header="Time" />
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="1"
                  IsEnabled="{Binding Diff,
                                      Converter={local:NullToBoolConverter WhenNull=False}}"
                  Visibility="{Binding RelativeSource={RelativeSource Self},
                                       Path=IsEnabled,
                                       Converter={x:Static local:BoolToVisibilityConverter.Default}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBox Width="{Binding ElementName=NameColumn,
                                         Path=ActualWidth}"
                         IsReadOnly="True"
                         Padding="2,0"
                         Text="Diff:" />
                <TextBox Grid.Column="1"
                         IsReadOnly="True"
                         Padding="2,0"
                         Text="{Binding Diff,
                                        Converter={x:Static media:TimeSpanToStringConverter.Default},
                                        ConverterParameter=fff}" />
            </Grid>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid VerticalAlignment="Bottom" Background="#19000000">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Slider x:Name="ProgressSlider"
                        Grid.Row="0"
                        media:Drag.PauseWhileDragging="{Binding ElementName=MediaElement}"
                        IsEnabled="{Binding ElementName=MediaElement,
                                            Path=HasMedia}"
                        Maximum="{Binding ElementName=MediaElement,
                                          Path=Length,
                                          Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}"
                        Minimum="0"
                        Style="{StaticResource {x:Static media:Styles.ProgressSliderStyleKey}}"
                        Value="{Binding ElementName=MediaElement,
                                        Path=Position,
                                        Converter={x:Static media:NullableTimeSpanToSecondsConverter.Default}}" />

                <Grid Grid.Row="1">
                    <Grid.Resources>
                        <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type Button}" />
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <ToggleButton x:Name="PlayPauseButton"
                                  Grid.Column="0"
                                  IsChecked="{Binding ElementName=MediaElement,
                                                      Path=IsPlaying}"
                                  IsEnabled="{Binding ElementName=MediaElement,
                                                      Path=HasMedia}">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type ToggleButton}">
                                <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PauseGeometryKey}}" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.PlayGeometryKey}}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <ToggleButton x:Name="ToggleMutedButton"
                                  Grid.Column="1"
                                  IsChecked="{Binding ElementName=MediaElement,
                                                      Path=IsMuted}"
                                  IsEnabled="{Binding ElementName=MediaElement,
                                                      Path=HasMedia}">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource {x:Static media:Styles.PlayerButtonBaseStyleKey}}" TargetType="{x:Type ToggleButton}">
                                <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.UnMuteGeometryKey}}" />
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="media:Icon.Geometry" Value="{StaticResource {x:Static media:Geometries.MuteGeometryKey}}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <TextBlock x:Name="ProgressTextBlock"
                               Grid.Column="2"
                               VerticalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} / {1}">
                                <Binding Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                         ConverterParameter="fff"
                                         ElementName="MediaElement"
                                         Path="Position" />
                                <Binding Converter="{x:Static media:TimeSpanToStringConverter.Default}"
                                         ConverterParameter="fff"
                                         ElementName="MediaElement"
                                         Path="Length" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <Button Grid.Column="4"
                            media:Icon.Geometry="{StaticResource {x:Static media:Geometries.FolderOpenGeometryKey}}"
                            Command="ApplicationCommands.Open" />

                    <Button Grid.Column="5"
                            HorizontalAlignment="Right"
                            media:Icon.Geometry="{StaticResource {x:Static media:Geometries.FullScreenGeometryKey}}"
                            Command="media:Commands.ToggleFullScreen"
                            IsEnabled="{Binding ElementName=MediaElement,
                                                Path=HasMedia}"
                            Padding="12,6,6,6" />
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
